import java.util.Arrays;
//Alex Fang 1st period

public class Split 
{
	public static void main(String[] args) {
		//String.split();
				//It's a method that acts on a string, <StringName>.split(<String sp>);
				//Where sp is the string where the string splits
				//And it returns an array
		
		// Example 1: "I really like really red apples"split("really")
				
		String red = "I really like really red apples";
		String[] really = red.split("really");
		System.out.println(Arrays.toString(really));
		
		//Example 2: play around with String.split! what happens if you "I reallyreally like apples".split("really") ?	
		String str = "I reallyreally like apples";
		String[] split = "I reallyreally like apples".split("really");
		System.out.println(Arrays.toString(split));
		
		// Example 3: "I like apples!".split(" "); 
				//		it will split at spaces and return an array of ["I","like","apples!"]
		String apples = "I like apples!";
		String[] half = apples.split(" ");
		System.out.println(Arrays.toString(half));
		
		midOfSandwich("applespineapplesbreadlettustomatobaconmayohambreadcheesebread");
		midOfSandwichWithSpaces("apples pineapples bread lettus tomato bacon mayo ham bread cheese");
	}
	
		//Your task:
		/*Write a method that take in a string like "applespineapplesbreadlettustomatobaconmayohambreadcheese" describing a sandwich
		 * use String.split to split up the sandwich by the word "bread" and return what's in the middle of the sandwich and ignores what's on the outside
		 * What if it's a fancy sandwich with multiple pieces of bread?
		 * //put numbers into an array
		*first ind, last ind, assign both to negative one and if first index not equal to -1 overide last ind
		*/
		public static void midOfSandwich(String sandwich){
				String[] breadArray = sandwich.split("bread");
				if(breadArray.length <= 2){
					System.out.println("Not a sandwich");
				}else{
				for(int i = 1; i <breadArray.length; i++){
					String breadMiddleStatement = breadArray[i];
					System.out.println("The statement between the two breads are: " + breadMiddleStatement);
				}
				}
//					if(bread.length == 2){
//						String breadMiddleStatement = bread[1];
//						System.out.println("The statement between the two breads are: " + breadMiddleStatement);
//					}
//					if(bread.length == 3){
//						String breadMiddleStatement1 = bread[1];
//						String breadMiddleStatement2 = bread[2];
//						System.out.println("The statement between the two breads are: " + breadMiddleStatement1);
//						System.out.println("The statement between the two breads are: " + breadMiddleStatement2);
//					}
//					if(bread.length == 4){
//						String breadMiddleStatement1 = bread[1];
//						String breadMiddleStatement2 = bread[2];
//						String breadMiddleStatement3 = bread[3];
//						System.out.println("The statement between the two breads are: " + breadMiddleStatement1);
//						System.out.println("The statement between the two breads are: " + breadMiddleStatement2);
//						System.out.println("The statement between the two breads are: " + breadMiddleStatement3);
//					}
			}
		
		
		
		
		//Your task pt 2:
		/*Write a method that take in a string like "apples pineapples bread lettus tomato bacon mayo ham bread cheese" describing a sandwich
		 * use String.split to split up the sandwich at the spaces, " ", and return what's in the middle of the sandwich and ignores what's on the outside
		 * Again, what if it's a fancy sandwich with multiple pieces of bread?
		*/
		public static void midOfSandwichWithSpaces(String sandwich){
			String [] revisedSandwich = sandwich.split("bread");
			if(revisedSandwich.length <= 2){
				System.out.println("Not a sandwiche");
			}else {
				if(revisedSandwich[1].equals(" ")){
					System.out.println("Not A sandwiche");
				}else{
				for(int i = 1; i < revisedSandwich.length-1; i++){
					sandwich = revisedSandwich[i];
					System.out.print(sandwich);
				}
				}
			}
		if(revisedSandwich.length == 3){
			sandwich = revisedSandwich[1];
			System.out.println(sandwich);
		}
		}
}
